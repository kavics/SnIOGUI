<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAGABoAwAAJgAAACAgAAABABgAqAwAAI4DAAAoAAAAEAAAACAAAAABABgAAAAAAEAD
        AAAAAAAAAAAAAAAAAAAAAAAAD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0Ix
        D0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0Ix
        D0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxEEMyEUQzEEMyD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0Ix
        EUQzEkQzD0IxEEMyCz8uCDwqDUAvEEMyD0IxD0IxD0IxD0IxD0IxEEMyEkQ0EkU0CDwqBTooEUMzDkEw
        H09AL1xNG0s7DkEwEEMyD0IxD0IxD0IxE0U0D0IxBDknATYkMl5QTnVqD0IxATckkqun////b4+HADYk
        FEU0D0IxEEIxEEIyAjglD0IxTnRpqL27////ssbFAzkmCT0sY4V8r8C7SHBkCDwrEkQzD0IxEUMyDkEw
        Z4iAyNbV9Pv/4uzvm7KsOGNWD0IxBzsqY4Z9zdjUXIB4ADMgE0U0D0IxDUAvFEY15e70////xNTUN2JU
        ACwZADQiEkU0ADIfLVtM8/j88vf5VHlwBjspEkQ0EUMzDkEwVntxtsjG8fj99Pr/t8jFRm5jEUMzU3lu
        RG1hJVRG2+Tl8Pb4MV1PCT0rD0IxEEMyAzgmCDwrO2VZj6ml9/r7sMTEDkAv7PT6/f//cJCIy9re////
        QmtfBTooD0IxD0IxEkU0EUQzBjspADUiIlFDQWpeBDgmWX103efm/f//7vX3iKSgDUAuEUMyD0IxD0Ix
        D0IxEEIxEkQzE0U1Cz4tBjspEUQzBjooGks7NF9RJlRFBjsoDkEwEEMyD0IxD0IxD0IxD0IxD0IxD0Ix
        EUMyEUQzD0IxEkQzDUAvBzsqCj4sEUQzEEMyD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0Ix
        EEMyEUQzEUMzEEIxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0IxD0Ix
        D0IxD0IxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAACgAAAAgAAAAQAAAAAEAGAAAAAAAgAwAAAAAAAAAAAAAAAAAAAAAAAAPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEQQjEQQjIQQjIQQjIQQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        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
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjERQzMSRTQRRDMQQzIQ
        QzISRDQSRDQQQzIPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEQQjIQQzIQQzIQQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEPQjEP
        QjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>